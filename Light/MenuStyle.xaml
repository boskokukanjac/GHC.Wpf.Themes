<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="{x:Type MenuItem}">
        <!--Border 1-->
        <Border x:Name="Border" 
                Background="Transparent" 
                BorderBrush="Transparent" 
                BorderThickness="0" 
                SnapsToDevicePixels="True">

            <Grid x:Name="Grid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition x:Name="Col3" Width="14"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" 
                                  x:Name="Icon" 
                                  VerticalAlignment="Center" 
                                  ContentSource="Icon" 
                                  Width="Auto"/>
                <Path x:Name="GlyphPanel" 
                      Margin="7,0,0,0" 
                      Visibility="Collapsed" 
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}" 
                      FlowDirection="LeftToRight" 
                      Data="M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z" />
                <ContentPresenter Grid.Column="1" 
                                  Margin="{TemplateBinding Padding}" 
                                  x:Name="HeaderHost" 
                                  RecognizesAccessKey="True" 
                                  ContentSource="Header" 
                                  VerticalAlignment="Center"/>
                <ContentPresenter Grid.Column="2" 
                                  Margin="35,1,8,1" 
                                  x:Name="IGTHost" 
                                  Opacity="1"
                                  ContentSource="InputGestureText" 
                                  VerticalAlignment="Center"/>
                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                    <Path x:Name="ArrowPanelPath" 
                          HorizontalAlignment="Right" 
                          VerticalAlignment="Center" 
                          Fill="{TemplateBinding Foreground}" 
                          Data="M0,0 L0,8 L4,4 z"/>
                </Grid>
                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       Placement="Right" 
                       HorizontalOffset="-1" 
                       x:Name="SubMenuPopup" 
                       Focusable="false"
                       PopupAnimation="None"
                       AllowsTransparency="True">
                    <!--Popup animation by default {DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}-->
                    <Grid Margin="0,0,5,5">
                        <!--Border 2-->
                        <Border x:Name="SubMenuBorder" 
                                BorderBrush="{DynamicResource MenuSeparatorBorderBrush}"
                                BorderThickness="1" 
                                Background="{DynamicResource SubmenuItemBackgroundColor}" 
                                SnapsToDevicePixels="True"
                                Effect="{DynamicResource SubmenuShadowEffect}">
                            <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True" Margin="2">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                            </Grid>
                        </Border>
                        <!--Border 3-->
                        <Border Margin="1,0,0,0" x:Name="TransitionBorder" Width="0" Height="2" 
                                                    VerticalAlignment="Top" HorizontalAlignment="Left" 
                                                    Background="{DynamicResource SubmenuItemBackgroundColor}" SnapsToDevicePixels="False"
                                                    BorderThickness="1" BorderBrush="{DynamicResource SubmenuItemBackgroundColor}"/>
                    </Grid>
                </Popup>
            </Grid>

        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Padding" Value="6,0,6,2"/>
                <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom"/>
                <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="SubMenuBorder" Property="BorderThickness" Value="1,1,1,1"/>
                <Setter TargetName="SubMenu" Property="Margin" Value="2,3,2,2"/>
                <Setter TargetName="TransitionBorder" Property="Width" Value="{Binding ActualWidth, ElementName=Grid}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                <Setter TargetName="Border" Property="Height" Value="24" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="12,0,12,2"/>
                <Setter TargetName="Col0" Property="MinWidth" Value="0"/>
                <Setter TargetName="Col3" Property="Width" Value="Auto"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="IGTHost" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Setter Property="Padding" Value="10,3,0,3"/>
                <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Setter Property="Padding" Value="10,3,0,3"/>
                <Setter TargetName="Border" Property="MinHeight" Value="22"/>
                <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="TopLevelHeader"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ItemMouseHoverBackground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="TopLevelItem"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ItemMouseHoverBackground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="SubmenuHeader"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlightedColor}"/>
                <Setter Property="Foreground" Value="{StaticResource SelectedItemForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="true"/>
                    <Condition Property="Role" Value="SubmenuItem"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundHighlightedColor}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource SubmenuItemBorderColor}"/>
                <Setter Property="Foreground" Value="{StaticResource SelectedItemForeground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSubmenuOpen" Value="true"/>
                    <Condition Property="Role" Value="TopLevelHeader"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MenuSeparatorBorderBrush}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
            </MultiTrigger>
            <!--<Trigger Property="IsSubmenuOpen" Value="true">
                <Setter TargetName="ArrowPanelPath" Property="Fill" Value="{DynamicResource MenuArrowColor}"/>
            </Trigger>-->
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MenuDisabledForegroundColor}"/>
                <!--<Setter TargetName="IGTHost" Property="Opacity" Value="1"/>-->
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Menu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Margin" Value="28,2,0,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{DynamicResource MenuSeparatorBorderBrush}" BorderThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
                <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate}" />
            </Style>
        </Style.Resources>
        <Setter Property="Padding" Value="2,0,0,0" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                <Setter Property="Height" Value="1"/>
                <Setter Property="Margin" Value="28,2,0,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Border BorderBrush="{DynamicResource MenuSeparatorBorderBrush}" BorderThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate}" />
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource SubmenuItemBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuForegroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Name="Border"
                            Padding="1"
                            Margin="0,0,4,4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource MenuSeparatorBorderBrush}" 
                            BorderThickness="1" 
                            Effect="{DynamicResource SubmenuShadowEffect}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>